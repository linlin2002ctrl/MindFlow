# Environment Variables for MindFlow App

# ==============================================================================
# SUPABASE CONFIGURATION
# ------------------------------------------------------------------------------
# Supabase is used for your database and authentication.
# You'll need to create a project on Supabase to get these keys.
#
# Step-by-step guide to get your Supabase keys:
# 1. Go to https://supabase.com/ and sign up or log in.
# 2. Create a new project.
# 3. Once your project is created, navigate to 'Project Settings' (usually a gear icon).
# 4. Click on 'API' in the sidebar.
# 5. You will find your 'Project URL' and 'anon public' key here.
#    - The 'Project URL' is your SUPABASE_URL.
#    - The 'anon public' key is your SUPABASE_ANON_KEY.
#
# IMPORTANT: The 'service_role' key (secret) should NEVER be exposed in client-side code.
# For this client-side React app, we will only use the 'anon public' key.
# ==============================================================================
VITE_SUPABASE_URL="YOUR_SUPABASE_PROJECT_URL"
VITE_SUPABASE_ANON_KEY="YOUR_SUPABASE_ANON_PUBLIC_KEY"

# ==============================================================================
# GEMINI 2.5 FLASH API CONFIGURATION
# ------------------------------------------------------------------------------
# Gemini 2.5 Flash API is used for AI conversations in your app.
# You'll need to generate an API key from Google AI Studio.
#
# Step-by-step guide to get your Gemini API key:
# 1. Go to https://aistudio.google.com/ and sign in with your Google account.
# 2. In the left sidebar, click on 'Get API key' or 'Create API key'.
# 3. Generate a new API key.
#
# IMPORTANT SECURITY NOTE:
# For a production application, it is highly recommended to handle AI API keys
# on a secure backend server to prevent exposure. For development and simplicity
# in this client-side app, we are including it here, but be aware of the security
# implications for a public-facing application. If you plan to deploy this app,
# consider setting up a small backend (e.g., a serverless function) to proxy
# your AI API requests.
# ==============================================================================
VITE_GEMINI_API_KEY="YOUR_GEMINI_API_KEY"